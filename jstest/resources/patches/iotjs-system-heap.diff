diff --git a/src/iotjs.c b/src/iotjs.c
index b50b939..7fac0b9 100644
--- a/src/iotjs.c
+++ b/src/iotjs.c
@@ -242,6 +242,8 @@ void iotjs_conf_console_out(int (*out)(int lv, const char* fmt, ...)) {
   iotjs_set_console_out(out);
 }
 
+void print_mem_stat();
+
 int iotjs_entry(int argc, char** argv) {
   int ret_code = 0;
 
@@ -273,6 +275,7 @@ terminate:
   iotjs_terminate(env);
 
 exit:
+  print_mem_stat();
 #ifdef JERRY_DEBUGGER
   if (iotjs_environment_config(env)->debugger &&
       iotjs_environment_config(env)->debugger->context_reset) {
diff --git a/src/iotjs_util.c b/src/iotjs_util.c
index abd7a86..5668015 100644
--- a/src/iotjs_util.c
+++ b/src/iotjs_util.c
@@ -27,6 +27,11 @@
 
 void force_terminate();
 
+void jstest_free(void*);
+void* jstest_malloc(size_t);
+void* jstest_calloc(size_t, size_t);
+void* jstest_realloc(void*, size_t);
+
 iotjs_string_t iotjs_file_read(const char* path) {
   FILE* file = fopen(path, "rb");
   if (file == NULL) {
@@ -76,7 +81,7 @@ iotjs_string_t iotjs_file_read(const char* path) {
 
 
 char* iotjs_buffer_allocate(size_t size) {
-  char* buffer = (char*)(calloc(size, sizeof(char)));
+  char* buffer = (char*)(jstest_calloc(size, sizeof(char)));
   if (buffer == NULL) {
     DLOG("Out of memory");
     force_terminate();
@@ -99,7 +104,7 @@ char* iotjs_buffer_allocate_from_number_array(size_t size,
 
 char* iotjs_buffer_reallocate(char* buffer, size_t size) {
   IOTJS_ASSERT(buffer != NULL);
-  char* newbuffer = (char*)(realloc(buffer, size));
+  char* newbuffer = (char*)(jstest_realloc(buffer, size));
   if (newbuffer == NULL) {
     DLOG("Out of memmory");
     force_terminate();
@@ -110,7 +115,7 @@ char* iotjs_buffer_reallocate(char* buffer, size_t size) {
 
 void iotjs_buffer_release(char* buffer) {
   if (buffer) {
-    free(buffer);
+    jstest_free(buffer);
   }
 }
 
